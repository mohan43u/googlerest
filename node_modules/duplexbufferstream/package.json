{
  "name": "duplexbufferstream",
  "version": "0.0.4",
  "description": "A simple implementation of Stream.Duplex spec in Node.js",
  "main": "./lib/duplexbufferstream",
  "directories": {
    "example": "example"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mohan43u/duplexbufferstream"
  },
  "keywords": [
    "stream",
    "buffer",
    "duplexbufferstream",
    "Duplex"
  ],
  "author": {
    "name": "Mohan R",
    "email": "mohan43u@gmail.com",
    "url": "http://mohan43u.wordpress.com"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/mohan43u/duplexbufferstream/issues"
  },
  "homepage": "https://github.com/mohan43u/duplexbufferstream",
  "readme": "### DuplexBufferStream\n\nA simple implementation of Stream.Duplex spec in Node.js.\n\n### Example\n\n##### tee.js\n\n\tvar DuplexBufferStream = require('duplexbufferstream');\n\tvar fs = require('fs');\n\t\n\tvar tee = new DuplexBufferStream();\n\tprocess.stdin.pipe(tee).pipe(process.stdout);\n\t\n\tvar teeout = process.argv.length > 2 ? fs.createWriteStream(process.argv[2]) : process.stderr;\n\ttee.on('data', function(chunk) {\n\t\tteeout.write(chunk);\n\t});\n\n### Execution\n\n\t$ echo \"hello world\" | node tee.js tee.output.log; cat tee.output.log\n\thello world\n\thello world\n\t$\n",
  "readmeFilename": "README.md",
  "_id": "duplexbufferstream@0.0.4",
  "dist": {
    "shasum": "ef510d4a51461fd1b02564038d6902a279698c36"
  },
  "_from": "duplexbufferstream@*",
  "_resolved": "https://registry.npmjs.org/duplexbufferstream/-/duplexbufferstream-0.0.4.tgz"
}
